{
	"locomotion": "Define <|locomotion|> (forward run/walk) by following this exact procedure verbatim:\n\n1. Let n = number of frames.  \n2. Extract 2D coordinates arrays: Bodymid[i], Snout[i], Tailbase[i] for i in 0…n−1.  \n3. Compute unit vectors H[i] = unit(Snout[i] − Tailbase[i]) for each frame.  \n4. Build a projection array P of length n with P[0] = 0 and for i=1…n−1:  \n   P[i] = dot(Bodymid[i] − Bodymid[i−1], H[i]).  \n5. Smooth P_smooth = np.convolve(P, np.ones(5)/5, mode='same') so P_smooth has length n.  \n6. Initialize: in_bout = False; bouts = [];  \n\n7. Loop i from 1 to n−1:  \n   a. If not in_bout and P_smooth[i] > 0:  \n      • in_bout = True; start = i; F = 0.0; B = 0.0; h0 = H[i].  \n   b. If in_bout:  \n      • F += max(P_smooth[i], 0);  \n      • B += max(-P_smooth[i], 0);  \n      • Compute angle = signed_angle(H[i], h0) in degrees.  \n      • Let L = ‖Snout[i] − Tailbase[i]‖ (full body length), N = i − start + 1.  \n      • If not (F ≥ 0.05 × L × N and B ≤ 0.2 × F and |angle| ≤ 30°):  \n         – If N ≥ 10, append (start, i−1) to bouts.  \n         – in_bout = False.  \n\n8. After loop, if in_bout and (n−1 − start + 1) ≥ 10, append (start, n−1) to bouts.  \n9. Merge any two bouts in ‘bouts’ separated by ≤ 2 frames into one.  \n\nReturn ONLY the final list of (start_frame, end_frame) tuples using 0‑based indexing and save to the specified file.",
	"rearing": "Define <|rearing|> as a posture where the averaged height of the head points (Snout, Left ear, Right ear, Neck base) is at least 2.5 × the averaged height of the Tail base and Body‑tail midpoint; the Body midpoint height should lie between these two averages for ≥ 5 consecutive frames. // HOW‑TO: use the Y (or Z) coordinate as height; compute head_mean_h, tail_mean_h; condition head_mean_h ≥ 2.5 × tail_mean_h and Bodymid_h between; merge gaps ≤ 2 frames.",
	"body elongation": "Define <|elongation|> (stretching out) as any frame where the Snout‑to‑Tail base distance is ≥ 1.30 × the running median of that same distance over the previous 61 frames (~2 s at 30 fps; use an odd‑sized window), AND the Body‑midpoint height is within ±10 % of the Tail base height. A bout continues while the factor stays ≥ 1.20. // HOW‑TO: length_factor = dist(Snout,Tailbase)/rolling_median(dist(Snout,Tailbase),61); detect start when length_factor ≥ 1.30, end when < 1.20; enforce height condition each frame; merge gaps ≤ 2 frames.",
	"body contraction": "Define <|contraction|> (curling) as any frame where the Snout‑to‑Tail base distance is ≤ 0.70 × the running median over the previous 61 frames (~2 s at 30 fps; odd‑sized window), AND the Snout height is within ±15 % of the Tail base height. Continue the bout while the factor stays ≤ 0.80. // HOW‑TO: length_factor = dist(Snout,Tailbase)/rolling_median(dist(Snout,Tailbase),61); start when ≤ 0.70, end when > 0.80; enforce height criteria; merge gaps ≤ 2 frames.",
	"head rotations": "Define <|head_rotation|> as a rotation of the head vector (Left ear → Right ear) relative to the body‑orientation vector (Tail base → Snout) by ≥ 40° in either direction over ≤ 6 frames, while the body‑orientation itself changes < 10°. Treat successive rotations in opposite directions separated by < 4 frames as part of the same exploratory head‑sweep. // HOW‑TO: angle = signed_angle(head_vector, body_orientation); find frames where |Δangle over ≤ 6 frames| ≥ 40° & |Δbody_orientation| < 10°; build bouts by chaining events with < 4‑frame gaps."
}
